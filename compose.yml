
networks:
  weather-demo-app:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data:

services:
  # Weather Demo App
  weather-app:
    build: .
    container_name: ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    networks:
      weather-demo-app:
        ipv4_address: ${WEATHER_APP_IP}
    ports:
      - "${WDP_SERVER_PORT}:8080"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - WDP_VERSION=${WDP_VERSION}
      - WDP_ENVIRONMENT=${WDP_ENVIRONMENT}
      - WDP_SERVER_PORT=8080
      - WDP_SERVER_HOST=${WDP_SERVER_HOST}
      - WDP_LOGGING_LEVEL=${WDP_LOGGING_LEVEL}
      - WDP_LOGGING_FORMAT=${WDP_LOGGING_FORMAT}
      - WDP_LOGGING_OUTPUT_PATH=${WDP_LOGGING_OUTPUT_PATH}
      - WDP_TELEMETRY_ENABLED=${WDP_TELEMETRY_ENABLED}
      - WDP_TELEMETRY_ENDPOINT=${WDP_TELEMETRY_ENDPOINT}
      - WDP_WEATHER_TIMEOUT=${WDP_WEATHER_TIMEOUT}
      - WDP_WEATHER_RETRIES=${WDP_WEATHER_RETRIES}
      - WDP_WEATHER_CACHE_TTL=${WDP_WEATHER_CACHE_TTL}
      - WDP_WEATHER_WORKERS=${WDP_WEATHER_WORKERS}
      - WDP_WEATHER_HANDLER_TIMEOUT=${WDP_WEATHER_HANDLER_TIMEOUT}

    depends_on:
      - tempo
      - loki
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: ${COMPOSE_PROJECT_NAME}-prometheus
    restart: unless-stopped
    networks:
      weather-demo-app:
        ipv4_address: ${PROMETHEUS_IP}
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    depends_on:
      - weather-app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5

  grafana:
    image: grafana/grafana:10.4.2
    container_name: ${COMPOSE_PROJECT_NAME}-grafana
    restart: unless-stopped
    networks:
      weather-demo-app:
        ipv4_address: ${GRAFANA_IP}
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - loki
      - tempo
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5

  # Loki - Log aggregation system
  loki:
    image: grafana/loki:3.0.0
    container_name: ${COMPOSE_PROJECT_NAME}-loki
    restart: unless-stopped
    networks:
      weather-demo-app:
        ipv4_address: ${LOKI_IP}
    ports:
      - "${LOKI_PORT}:3100"
    volumes:
      - loki_data:/loki
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5

  # Promtail - Log shipper for Loki  
  promtail:
    image: grafana/promtail:3.0.0
    container_name: ${COMPOSE_PROJECT_NAME}-promtail
    restart: unless-stopped
    networks:
      weather-demo-app:
        ipv4_address: ${PROMTAIL_IP}
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  # Tempo - Distributed tracing backend
  tempo:
    image: grafana/tempo:2.3.1
    container_name: ${COMPOSE_PROJECT_NAME}-tempo
    restart: unless-stopped
    networks:
      weather-demo-app:
        ipv4_address: ${TEMPO_IP}
    ports:
      - "${TEMPO_HTTP_PORT}:3200"   # Tempo HTTP API
      - "${TEMPO_GRPC_PORT}:4317"   # OTLP gRPC receiver
      - "${TEMPO_HTTP_OTLP_PORT}:4318"   # OTLP HTTP receiver
    volumes:
      - tempo_data:/tmp/tempo
      - ./monitoring/tempo-config.yml:/etc/tempo/tempo.yaml:ro
    command: -config.file=/etc/tempo/tempo.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5

 